using System;
using System.Collections.Generic;

public class ResponseCommandKind
{
    protected static Dictionary<Kind, string> nameList;

    static ResponseCommandKind()
    {
        Dictionary<Kind, string> dictionary = new Dictionary<Kind, string> {
            { 
                Kind.NONE,
                null
            },
            { 
                Kind.LOGIN_TO_MEMBERCENTER,
                "login_to_membercenter"
            },
            { 
                Kind.SIGNUP,
                "signup"
            },
            { 
                Kind.ACCOUNT_REGIST,
                "regist_account"
            },
            { 
                Kind.GAME_DATA,
                "gamedata"
            },
            { 
                Kind.LOGIN,
                "login"
            },
            { 
                Kind.HOME,
                "home"
            },
            { 
                Kind.GACHA_DRAW,
                "gacha_draw"
            },
            { 
                Kind.DECK_SETUP,
                "deck_setup"
            },
            { 
                Kind.USER_FORMATION,
                "user_formation"
            },
            { 
                Kind.PURCHASE,
                "purchase"
            },
            { 
                Kind.PURCHASE_BY_STONE,
                "purchase_by_stone"
            },
            { 
                Kind.PURCHASE_BY_BANK,
                "purchase_by_bank"
            },
            { 
                Kind.SELL_SERVANT,
                "sell_svt"
            },
            { 
                Kind.FRIEND_OFFER,
                "friend_offer"
            },
            { 
                Kind.FRIEND_ACCEPT,
                "friend_accept"
            },
            { 
                Kind.FRIEND_REJECT,
                "friend_reject"
            },
            { 
                Kind.FRIEND_CANCEL,
                "friend_cancel"
            },
            { 
                Kind.FRIEND_REMOVE,
                "friend_remove"
            },
            { 
                Kind.PROFILE,
                "profile"
            },
            { 
                Kind.CHANGE_USERNAME,
                "profile_edit_name"
            },
            { 
                Kind.BATTLE_SETUP,
                "battle_setup"
            },
            { 
                Kind.BATTLE_RESULT,
                "battle_result"
            },
            { 
                Kind.BATTLE_COMMANDSPELL,
                "battle_command_spell"
            },
            { 
                Kind.BATTLE_USECONTINUE,
                "battle_use_continue"
            },
            { 
                Kind.COMBINE_SERVANT,
                "card_combine"
            },
            { 
                Kind.CARD_COMBINE_SKILL,
                "card_combine_skill"
            },
            { 
                Kind.CARD_COMBINE_TREASUREDVC,
                "card_combine_td"
            },
            { 
                Kind.PRESENT_RECEIVE,
                "present_receive"
            },
            { 
                Kind.CODE_INPUT,
                "code_input"
            },
            { 
                Kind.CONTINUE_PREPARE,
                "codekey_exchange"
            },
            { 
                Kind.CONTINUE_INPUT,
                "continue_input"
            },
            { 
                Kind.CONTINUE_DECIDE,
                "continue_decide"
            },
            { 
                Kind.SET_FAVORITE_SERVANT,
                "card_favorite"
            },
            { 
                Kind.TUTORIAL_SET,
                "tutorial_set"
            },
            { 
                Kind.TUTORIAL_CLEAR,
                "tutorial_clear"
            },
            { 
                Kind.BATTLE_RESUME,
                "battle_resume"
            },
            { 
                Kind.CARD_COMBINE_LIMIT,
                "card_combine_limit"
            },
            { 
                Kind.SERVANT_EQUIP_SET,
                "svt_equip_set"
            },
            { 
                Kind.SERVANT_EQUIP_COMBINE,
                "svt_equip_combine"
            },
            { 
                Kind.DEBUG_QUEST,
                "debug_quest"
            },
            { 
                Kind.SET_BIRTHDAY,
                "profile_edit_birth"
            },
            { 
                Kind.ITEM_USE,
                "item_use"
            },
            { 
                Kind.COMMANDSPELL_USE,
                "command_spell"
            },
            { 
                Kind.BOX_GACHA_DRAW,
                "box_gacha_draw"
            },
            { 
                Kind.BOX_GACHA_RESET,
                "box_gacha_reset"
            },
            { 
                Kind.MISSION_NOTIFY,
                "event_mission_notify"
            },
            { 
                Kind.EV_MISSION_REWARD,
                "event_mission_receive"
            },
            { 
                Kind.SUPPORT_SERVANT,
                "follower_setup"
            },
            { 
                Kind.ANNOUNCEMENTLIST,
                "announcement_list"
            },
            { 
                Kind.PAYBILIORDER,
                "payBiliOrder"
            },
            { 
                Kind.PAYBILISUCCESS,
                "payBiliSuccess"
            },
            { 
                Kind.PAYUOORDER,
                "payUoOrder"
            },
            { 
                Kind.PAYUOSUCCESS,
                "payUoSuccess"
            },
            { 
                Kind.DECK_EDIT_NAME,
                "deck_edit_name"
            },
            { 
                Kind.PAYIOSORDER,
                "payIosOrder"
            },
            { 
                Kind.PAYIOSSUCCESS,
                "payIosSuccess"
            },
            { 
                Kind.USERSERVANTLOCK,
                "user_servant_lock"
            },
            { 
                Kind.BATTLE_LIVE,
                "battlelive"
            }
        };
        nameList = dictionary;
    }

    public static string GetName(Kind kind) => 
        nameList[kind];

    public static ResponseData SearchData(Kind kind, ResponseData[] responseList)
    {
        string name = GetName(kind);
        for (int i = 0; i < responseList.Length; i++)
        {
            ResponseData data = responseList[i];
            if (data.nid == name)
            {
                return data;
            }
        }
        return null;
    }

    public enum Kind
    {
        NONE,
        SIGNUP,
        ACCOUNT_REGIST,
        LOGIN_TO_MEMBERCENTER,
        GAME_DATA,
        LOGIN,
        HOME,
        GACHA_DRAW,
        DECK_SETUP,
        USER_FORMATION,
        PURCHASE,
        PURCHASE_BY_STONE,
        PURCHASE_BY_BANK,
        SELL_SERVANT,
        FRIEND_OFFER,
        FRIEND_ACCEPT,
        FRIEND_REJECT,
        FRIEND_CANCEL,
        FRIEND_REMOVE,
        PROFILE,
        CHANGE_USERNAME,
        BATTLE_SETUP,
        BATTLE_RESULT,
        BATTLE_COMMANDSPELL,
        BATTLE_USECONTINUE,
        COMBINE_SERVANT,
        CARD_COMBINE_SKILL,
        CARD_COMBINE_TREASUREDVC,
        PRESENT_RECEIVE,
        CODE_INPUT,
        CONTINUE_PREPARE,
        CONTINUE_INPUT,
        CONTINUE_DECIDE,
        SET_FAVORITE_SERVANT,
        TUTORIAL_SET,
        TUTORIAL_CLEAR,
        BATTLE_RESUME,
        CARD_COMBINE_LIMIT,
        SERVANT_EQUIP_SET,
        SERVANT_EQUIP_COMBINE,
        DEBUG_QUEST,
        SET_BIRTHDAY,
        ITEM_USE,
        COMMANDSPELL_USE,
        BOX_GACHA_DRAW,
        BOX_GACHA_RESET,
        MISSION_NOTIFY,
        EV_MISSION_REWARD,
        SUPPORT_SERVANT,
        ANNOUNCEMENTLIST,
        PAYBILIORDER,
        PAYBILISUCCESS,
        PAYUOORDER,
        PAYUOSUCCESS,
        DECK_EDIT_NAME,
        PAYIOSORDER,
        PAYIOSSUCCESS,
        USERSERVANTLOCK,
        BATTLE_LIVE
    }
}

